
@{
    Layout = null;
}
@using Motel.ViewModels
@model QuanLyHopDongViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, YourProjetcName


<div class="row">
    <div class="col-md-5">
        <div class="table-scrollable table-scrollable-agreement">
            <table class="table table-striped table-bordered table-hover items-table-service aside-table ">
                <thead>
                    <tr>
                        <th class="text-center">
                            <a class="btn btn-circle btn-icon-only btn-default add-all-selection-service"><span class="fa fa-plus" aria-hidden="true"></span></a>
                        </th>
                        <th>Tên dịch vụ</th>
                        <th class="text-center">Đơn giá</th>
                        <th class="text-center">Đơn vị</th>
                        <th class="amount hide"></th>
                    </tr>
                </thead>
                <tbody class="item-container-service-left">
                    @for (int i = 0; i < Model.listDichVu.Count(); i++)
                    {
                        <tr>
                            <td class="text-center">
                                <a class="btn btn-circle btn-icon-only btn-default item-selection-service add-selection-service">
                                    <input class="display-hide" type="checkbox" asp-for="@Model.listDichVu[i].IsCheck" /><span class="fa fa-plus" aria-hidden="true"></span>
                                    <input class="display-hide" type="hidden" asp-for="@Model.listDichVu[i].MaDV" />
                                </a>

                            </td>
                            <td class="service-building-18142">@Model.listDichVu[i].Ten</td>
                            <td class="text-center unit-price-18142 ">
                                @Model.listDichVu[i].Gia
                            </td>
                            <td class="text-center">
                                <div class="unit181422">@Model.listDichVu[i].TenDonVi</div>
                                <input type="hidden">
                            </td>
                            <td class="amount hide text-center 18142">
                                <input type="text" class="form-control number-format text-center amount18142" readonly="">
                            </td>

                            <td class="stop-service hide text-center 18142">
                                <div class="md-checkbox-inline">
                                    <div class="md-checkbox">
                                        <input type="checkbox" class="md-check"><label for="checkboxactive18142"><span></span><span class="check"></span><span class="box"></span></label>
                                    </div>
                                </div>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="col-md-7" style="padding-left: 0px;">
        <div class="table-scrollable table-scrollable-agreement">
            <table class="table table-striped table-bordered table-hover items-table-service">
                <thead>
                    <tr>
                        <th class="text-center">
                            <a class="btn btn-circle btn-icon-only btn-default remove-all-selection-service"><span class="fa fa-minus" aria-hidden="true"></span></a>
                        </th>
                        <th class="text-center">Tên dịch vụ</th>
                        <th class="text-center">Đơn giá</th>
                        <th class="text-center">Đơn vị</th>
                        <th class="amount text-center">Số lượng</th>
                        <th class="stop-service text-center">Tạm dừng</th>
                    </tr>
                </thead>
                <tbody class="item-container-service-right">
                    @for (int i = 0; i < Model.listDichVu.Count(); i++)
                    {
                        @if (@Model.listDichVu[i].IsCheck == false)
                        {
                            <tr>
                                <td class="text-center">
                                    <a class="btn btn-circle btn-icon-only btn-default item-selection-service add-selection-service">
                                        <input class="display-hide" type="checkbox" asp-for="@Model.listDichVu[i].IsCheck" /><span class="fa fa-plus" aria-hidden="true"></span>
                                        <input class="display-hide" type="hidden" asp-for="@Model.listDichVu[i].MaDV" />
                                    </a>

                                </td>
                                <td class="service-building-18142">@Model.listDichVu[i].Ten</td>
                                <td class="text-center unit-price-18142 ">
                                    @Model.listDichVu[i].Gia
                                </td>
                                <td class="text-center">
                                    <div class="unit181422">@Model.listDichVu[i].TenDonVi</div>
                                    <input type="hidden">
                                </td>
                                <td class="amount hide text-center 18142">
                                    <input type="text" class="form-control number-format text-center amount18142" readonly="">
                                </td>

                                <td class="stop-service hide text-center 18142">
                                    <div class="md-checkbox-inline">
                                        <div class="md-checkbox">
                                            <input type="checkbox" class="md-check"><label for="checkboxactive18142"><span></span><span class="check"></span><span class="box"></span></label>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }

                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#unit-price-room').change(function () {
            $('#admin_agreement_down_payment').val($('#unit-price-room').val());
        });
        $('table.items-table-service').on('click', '.add-selection-service, .remove-selection-service', function () {
            /* "this" is the button element instance */
            var $btn = $(this).toggleClass('add-selection-service remove-selection-service'),
                /* define row to be moved by looking up DOM tree*/
                $item = $btn.closest('tr'),
                /* define other table */
                $otherTable = $('.items-table-service').not($btn.closest('table'));

            $btn.find('span').toggleClass('fa fa-plus fa fa-minus');
            $btn.find('input:checkbox').prop("checked", !$btn.find('input:checkbox').is(":checked"));

            /*Cập nhật uncheck cho checkbox*/
            var $id = $btn.find('input:checkbox').val();
            $item.find('#checkboxstatus' + $id).attr("checked", false);

            if ($(this).hasClass("remove-selection-service")) {
                $("." + $id).removeClass("hide");
                $(".unit-price-" + $id).addClass("hide");
            } else {
                $("." + $id).addClass("hide");
                $(".unit-price-" + $id).removeClass("hide");
            }
            ;

            $otherTable.append($item);
        });

        // Remove Or Add all
        $('table.items-table-service').on('click', '.add-all-selection-service, .remove-all-selection-service', function () {

            // Lấy thông tin bảng được chọn dựa trên phần tử được click
            $myTable = $(this).closest('table');
            $rowsMyTable = $myTable.find('> tbody > tr');
            $otherTable = $('.items-table-service').not($(this).closest('table'));

            $rowsMyTable.each(function () {
                $item1x = $(this).find('.item-selection-service');
                if ($item1x.length > 0) {
                    var columns = $(this).find('td');
                    columns.each(function () {
                        $btnSelection = $(this).find('.item-selection-service');
                        $btn = $btnSelection.toggleClass('add-selection-service remove-selection-service');
                        $btn.find('span').toggleClass('fa fa-plus fa fa-minus');
                        $btn.find('input:checkbox').prop("checked", !$btn.find('input:checkbox').is(":checked"));

                        /*Cập nhật uncheck cho checkbox*/
                        var $id = $btn.find('input:checkbox').val();
                        $item = $(this).closest('tr');
                        $item.find('#checkboxstatus' + $id).attr("checked", false);

                        if ($btn.hasClass("remove-selection-service")) {
                            $("." + $id).removeClass("hide");
                            $(".unit-price-" + $id).addClass("hide");
                        } else {
                            $("." + $id).addClass("hide");
                            $(".unit-price-" + $id).removeClass("hide");
                            $(".unit-price-" + $id).removeClass("hide");
                        }
                        ;
                    });
                    $otherTable.append($(this));
                }
            });
        });

        $('.formula-type-item').change(function () {
            var id = $(this).attr('id').replace('formula-type-item', '');

            if ($(this).val() == 1) {
                /* Thông tin cột đơn giá thay đổi theo đúng cấu hình của Formula Type*/
                $('.formula-id-item' + id).hide();
                $('.formula-id-item' + id).prop('disabled', true);
                $('.unit-price-item' + id).hide();
                $('.unit-price-item' + id).prop('disabled', true);
                $('.unit-price-hidden-item' + id).prop('disabled', true);
                $('.formula-id-hidden-item' + id).prop('disabled', false);

                $('.unit-price-fix-item' + id).show();
                $('.unit-price-fix-item' + id).prop('disabled', false);

                /* Thông tin cột đơn vị thay đổi theo đúng cấu hình của Formula Type*/
                $('.unit' + id + 2).html('Số (kWh)');
                $('.unit' + id + 3).html('Khối (m3)');
                // Input hidden unit
                $('#unit' + id + 2).val('24295');
                $('#unit' + id + 3).val('24296');

                /* Thông tin cột số lượng thay đổi theo đúng cấu hình của Formula Type*/
                $('.amount' + id).val(1);
                $('.amount' + id).prop('readonly', true)



            }

            if ($(this).val() == 2) {
                /* Thông tin cột đơn giá thay đổi theo đúng cấu hình của Formula Type*/
                $('.formula-id-item' + id).hide();
                $('.formula-id-item' + id).prop('disabled', true);
                $('.unit-price-hidden-item' + id).prop('disabled', true);
                $('.formula-id-hidden-item' + id).prop('disabled', false);
                $('.unit-price-fix-item' + id).hide();
                $('.unit-price-fix-item' + id).prop('disabled', true);

                $('.unit-price-item' + id).show();
                $('.unit-price-item' + id).prop('disabled', false);

                /* Thông tin cột đơn vị thay đổi theo đúng cấu hình của Formula Type*/
                $('.unit' + id + 2).html('Người');
                $('.unit' + id + 3).html('Người');
                // Input hidden unit
                $('#unit' + id + 2).val('24297');
                $('#unit' + id + 3).val('24297');

                /* Thông tin cột số lượng thay đổi theo đúng cấu hình của Formula Type*/
                $('.amount' + id).prop('readonly', false);
                $('.amount' + id).val(1);
            }

            if ($(this).val() == 3) {

                /* Thông tin cột đơn giá thay đổi theo đúng cấu hình của Formula Type*/
                $('.formula-id-item' + id).show();
                $('.formula-id-item' + id).prop('disabled', false);
                $('.unit-price-hidden-item' + id).prop('disabled', false);
                $('.formula-id-hidden-item' + id).prop('disabled', true);

                $('.unit-price-item' + id).hide();
                $('.unit-price-item' + id).prop('disabled', true);

                $('.unit-price-fix-item' + id).hide();
                $('.unit-price-fix-item' + id).prop('disabled', true);

                /* Thông tin cột đơn vị thay đổi theo đúng cấu hình của Formula Type*/
                $('.unit' + id + 2).html('Số (kWh)');
                $('.unit' + id + 3).html('Khối (m3)');
                // Input hidden unit
                $('#unit' + id + 2).val('24295');
                $('#unit' + id + 3).val('24296');
                /* Thông tin cột số lượng thay đổi theo đúng cấu hình của Formula Type*/
                $('.amount' + id).val(1);
                $('.amount' + id).prop('readonly', true)
            }
        })
    });
</script>

